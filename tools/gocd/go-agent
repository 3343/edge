##
# @file This file is part of EDGE.
#
# @author Alexander Breuer (anbreuer AT ucsd.edu)
#
# @section LICENSE
# Copyright (c) 2017, Regents of the University of California
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# @section DESCRIPTION
# Template for a GoCD-agent with SSL-certificate.
# Directory: /etc/default/go-agent
##

# get the server certificate via
# openssl s_client -showcerts -connect HOST:PORT </dev/null 2>/dev/null|openssl x509 -outform PEM

GO_SERVER_URL=https://HOST:PORT/go
AGENT_BOOTSTRAPPER_ARGS="-rootCertFile /var/go/root-cert.pem -sslVerificationMode NO_VERIFY_HOST"

AGENT_WORK_DIR=/var/lib/${SERVICE_NAME:-go-agent}
DAEMON=Y
VNC=N

TOOL_CHAIN=intel

if [ "$PRODUCTION_MODE" == "Y" ]
then
  echo "**************************************"
  echo "* performing setup of the tool chain *"
  echo "**************************************"

  if [ "$TOOL_CHAIN" == "intel" ]
  then
    # load intel mkl, e.g., for use in gmsh
    source /opt/intel/mkl/bin/mklvars.sh intel64
    # load inspector xe
    source /opt/intel/inspector/inspxe-vars.sh
    # load intel compilers
    source /opt/intel/bin/compilervars.sh intel64

    # linux brew installs are secondary
    # avoids conflics with system libstdc++ in icpc-builds
    export PATH="$PATH:/var/go/.linuxbrew/bin"
    export MANPATH="$MANPATH:/var/go/.linuxbrew/share/man"
    export INFOPATH="$INFOPATH:/var/go/.linuxbrew/share/info"
  else
    export PATH="/var/go/.linuxbrew/bin:$PATH"
  fi

  # set unlimited stack
  ulimit -s unlimited

  # add local bin directory
  export PATH="/var/go/bin:$PATH"

  # disable Git LFS checkout by default
  export GIT_LFS_SKIP_SMUDGE=1

  echo "Go-agent is using the following as \$PATH: $PATH"
  echo "Go-agent has the following ulimits:"
  ulimit -a

  echo "**************************************"
  echo "* finished setting up the tool chain *"
  echo "**************************************"
fi
