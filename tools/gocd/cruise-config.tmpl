<?xml version="1.0" encoding="utf-8"?>
<!--
  @file This file is part of EDGE.

  @author Alexander Breuer (anbreuer AT ucsd.edu)

  @section LICENSE
  Copyright (c) 2017-2018, Regents of the University of California
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  @section DESCRIPTION
  Template for EDGE's GoCD-config.

  The following template parameters are used and have to be substituted before the config is usable:

    TEMPLATE_AGENT_AUTO_REGISTER_KEY
    TEMPLATE_SERVER_ID
    TEMPLATE_TOKEN_GENERATION_KEY

    TEMPLATE_GIT_EDGE_CORE
    TEMPLATE_GIT_EDGE_OPT

    TEMPLATE_CLOUD_0_IP
    TEMPLATE_CLOUD_0_UUID
-->
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="108">
  <server artifactsdir="artifacts" agentAutoRegisterKey="TEMPLATE_AGENT_AUTO_REGISTER_KEY" commandRepositoryLocation="default" serverId="TEMPLATE_SERVER_ID" tokenGenerationKey="TEMPLATE_TOKEN_GENERATION_KEY">
    <security>
      <!-- Authentification -->
      <authConfigs>
        <authConfig id="auth_file" pluginId="cd.go.authentication.passwordfile">
          <property>
            <key>PasswordFilePath</key>
            <value>/var/go/.htaccess</value>
          </property>
        </authConfig>
      </authConfigs>

      <!-- Admins -->
      <admins>
        <user>breuera</user>
      </admins>
    </security>
  </server>

  <!-- Dependency Pipelines -->
  <pipelines group="Deps">
    <authorization>
      <view>
        <user>edgebot</user>
      </view>
    </authorization>

    <pipeline name="deps_clang" template="Deps">
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" />
      </materials>
    </pipeline>
    <pipeline name="deps_gnu" template="Deps">
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" />
      </materials>
    </pipeline>
    <pipeline name="deps_intel" template="Deps">
      <timer onlyOnChanges="true">0 * * ? * *</timer>
      <materials>
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" />
      </materials>
    </pipeline>
  </pipelines>

  <!-- CI Pipelines -->
  <pipelines group="CI">
    <authorization>
      <view>
        <user>edgebot</user>
      </view>
    </authorization>
    <pipeline name="CI_develop_clang" template="CI">
      <params>
        <param name="toolchain">clang</param>
      </params>
      <environmentvariables>
        <variable name="GMSH_EXEC">
            <value>gmsh</value>
        </variable>
        <variable name="EDGE_MODE_DEBUG">
            <value>debug</value>
        </variable>
        <variable name="EDGE_MODE_RELEASE">
            <value>release+san</value>
        </variable>
        <variable name="LSAN_OPTIONS">
            <value>suppressions=tools/build/asan_leak.supp</value>
        </variable>
        <variable name="ASAN_OPTIONS">
          <value>fast_unwind_on_malloc=0</value>
        </variable>
        <variable name="EDGE_EXEC">
            <value>./build/edge</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>
    <pipeline name="CI_develop_gnu" template="CI">
      <params>
        <param name="toolchain">gnu</param>
      </params>
      <environmentvariables>
        <variable name="GMSH_EXEC">
            <value>gmsh</value>
        </variable>
        <variable name="EDGE_MODE_DEBUG">
            <value>debug</value>
        </variable>
        <variable name="EDGE_MODE_RELEASE">
            <value>release</value>
        </variable>
        <variable name="EDGE_EXEC">
            <value>./build/edge</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>
    <pipeline name="CI_develop_intel" template="CI">
      <params>
        <param name="toolchain">intel</param>
      </params>
      <environmentvariables>
        <variable name="GMSH_EXEC">
            <value>gmsh</value>
        </variable>
        <variable name="EDGE_MODE_DEBUG">
            <value>debug</value>
        </variable>
        <variable name="EDGE_MODE_RELEASE">
            <value>release</value>
        </variable>
        <variable name="EDGE_EXEC">
            <value>./build/edge</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>
  </pipelines>

  <!-- Convergence Benchmarks -->
  <pipelines group="Conv">
    <authorization>
      <view>
        <user>edgebot</user>
      </view>
    </authorization>
    <!-- 64 bit precision -->
    <pipeline name="conv_develop_gnu_64_cfr1_xsmm" lockBehavior="none" template="Conv">
      <params>
        <param name="toolchain">intel</param>
        <param name="EDGE_PRECISION">64</param>
        <param name="EDGE_CFR">1</param>
        <param name="EDGE_XSMM">1</param>
      </params>
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>

    <pipeline name="conv_develop_gnu_64_cfr8_xsmm" lockBehavior="none" template="Conv">
      <params>
        <param name="toolchain">intel</param>
        <param name="EDGE_PRECISION">64</param>
        <param name="EDGE_CFR">8</param>
        <param name="EDGE_XSMM">1</param>
      </params>
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>

    <!-- 32 bit precision -->
    <pipeline name="conv_develop_gnu_32_cfr1_xsmm" lockBehavior="none" template="Conv">
      <params>
        <param name="toolchain">intel</param>
        <param name="EDGE_PRECISION">32</param>
        <param name="EDGE_CFR">1</param>
        <param name="EDGE_XSMM">1</param>
      </params>
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>

    <pipeline name="conv_develop_gnu_32_cfr16_xsmm" lockBehavior="none" template="Conv">
      <params>
        <param name="toolchain">intel</param>
        <param name="EDGE_PRECISION">32</param>
        <param name="EDGE_CFR">16</param>
        <param name="EDGE_XSMM">1</param>
      </params>
      <timer onlyOnChanges="true">0 00 23 ? * FRI</timer>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>
  </pipelines>

  <!-- Wave Propagation Benchmarks -->
  <pipelines group="WaveProp">
    <authorization>
      <view>
        <user>edgebot</user>
      </view>
    </authorization>
    <pipeline name="wp_develop_gnu_xsmm" lockBehavior="none" template="WaveProp">
      <params>
        <param name="toolchain">intel</param>
        <param name="EDGE_XSMM">1</param>
        <param name="EDGE_MODE_RELEASE">release</param>
      </params>
      <timer onlyOnChanges="true">0 00 23 ? * SAT</timer>
      <materials>
        <pipeline pipelineName="deps_#{toolchain}" stageName="moab" materialName="deps" />
        <git url="TEMPLATE_GIT_EDGE_CORE" branch="develop" dest="edge"/>
      </materials>
    </pipeline>
  </pipelines>

  <templates>
    <!-- *******************************************
         *>>>>>>>       Dependencies        <<<<<<<*
         ******************************************* -->
    <pipeline name="Deps">
      <!-- standalone libraries (no dependencies) -->
      <stage name="standalone">
        <approval type="manual" />
        <jobs>
          <!-- LIBXSMM -->
          <job name="build_xsmm">
            <tasks>
              <exec command="/bin/bash" workingdir="submodules/libxsmm/">
                <arg>-c</arg>
                <arg>make CC=${CC_SEQ} CXX=${CXX_SEQ} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="submodules/libxsmm" />
            </artifacts>
          </job>
        </jobs>
      </stage>

      <!-- zlib -->
      <stage name="zlib" fetchMaterials="false">
        <environmentvariables>
          <variable name="ZLIB_LINK">
            <value>http://zlib.net/zlib-1.2.11.tar.gz</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="build">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget ${ZLIB_LINK} -O zlib.tar.gz</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>mkdir zlib; tar -xzf zlib.tar.gz -C zlib --strip-components=1</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="zlib/">
                <arg>-c</arg>
                <arg>./configure --static --prefix=$(pwd)/zlib</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="zlib/">
                <arg>-c</arg>
                <arg>make -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="zlib/">
                <arg>-c</arg>
                <arg>make install</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="zlib/zlib/lib">
                <arg>-c</arg>
                <arg>rm -r pkgconfig</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="zlib/zlib" />
            </artifacts>
          </job>
        </jobs>
      </stage>

      <!-- HDF5 -->
      <stage name="hdf5" fetchMaterials="false">
        <environmentvariables>
          <variable name="HDF5_LINK">
            <value>https://www.hdfgroup.org/package/gzip/?wpdmdl=11810</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="build">
            <tasks>
              <fetchartifact origin="gocd" stage="zlib" job="build" srcdir="zlib" dest="libs"/>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget ${HDF5_LINK} -O hdf5.tar.gz</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>mkdir hdf5; tar -xzf hdf5.tar.gz -C hdf5 --strip-components=1</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="hdf5/">
                <arg>-c</arg>
                <arg>./configure --enable-shared=no --with-zlib=$(pwd)/../libs/zlib --prefix=$(pwd)/hdf5_seq</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="hdf5/">
                <arg>-c</arg>
                <arg>make -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="hdf5/">
                <arg>-c</arg>
                <arg>make install</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="hdf5/hdf5_seq/lib">
                <arg>-c</arg>
                <arg>rm *.la</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="hdf5/hdf5_seq" />
            </artifacts>
          </job>
        </jobs>
      </stage>

      <!-- NetCDF -->
      <stage name="netcdf" fetchMaterials="false">
        <environmentvariables>
          <variable name="NETCDF_LINK">
            <value>ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.6.1.tar.gz</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="build">
            <tasks>
              <fetchartifact origin="gocd" stage="hdf5" job="build" srcdir="hdf5_seq" dest="libs"/>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>wget ${NETCDF_LINK} -O netcdf.tar.gz</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>mkdir netcdf; tar -xzf netcdf.tar.gz -C netcdf --strip-components=1</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="netcdf/">
                <arg>-c</arg>
                <arg>LIBS="-ldl" HDF5DIR=$(pwd)/../libs/hdf5_seq ZLIBDIR=$(pwd)/../libs/zlib CPPFLAGS="-I${HDF5DIR}/include -I${ZLIBDIR}/include" LDFLAGS="-L${HDF5DIR}/lib -L${ZLIBDIR}/lib" ./configure --enable-shared=no --disable-dap --prefix=$(pwd)/netcdf_seq</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="netcdf/">
                <arg>-c</arg>
                <arg>make -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="netcdf/">
                <arg>-c</arg>
                <arg>make install</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="netcdf/netcdf_seq/lib">
                <arg>-c</arg>
                <arg>rm *.la; rm -r pkgconfig</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="netcdf/netcdf_seq" />
            </artifacts>
          </job>
        </jobs>
      </stage>

      <!-- MOAB -->
      <stage name="moab" fetchMaterials="false">
        <jobs>
          <job name="build">
            <tasks>
              <fetchartifact origin="gocd" stage="zlib" job="build" srcdir="zlib" dest="libs"/>
              <fetchartifact origin="gocd" stage="hdf5" job="build" srcdir="hdf5_seq" dest="libs"/>
              <fetchartifact origin="gocd" stage="netcdf" job="build" srcdir="netcdf_seq" dest="libs"/>
              <exec command="/bin/bash" workingdir="submodules/moab/">
                <arg>-c</arg>
                <arg>autoreconf -fi</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="submodules/moab/">
                <arg>-c</arg>
                <arg>ZLIBDIR=$(pwd)/../../libs/zlib LIBS="${ZLIBDIR}/lib/libz.a" CC=${CC_SEQ} CXX=${CXX_SEQ} ./configure --disable-debug --enable-optimize --enable-shared=no --enable-static=yes --disable-fortran --enable-tools --with-zlib=${ZLIBDIR} --with-hdf5=$(pwd)/../../libs/hdf5_seq --with-netcdf=$(pwd)/../../libs/netcdf_seq --disable-blaslapack --with-eigen3=$(pwd)/../eigen --with-pnetcdf=no --with-metis=no --prefix=$(pwd)/moab_seq</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="submodules/moab/">
                <arg>-c</arg>
                <arg>make -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="submodules/moab/">
                <arg>-c</arg>
                <arg>make install</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="submodules/moab/moab_seq/lib">
                <arg>-c</arg>
                <arg>rm *.la</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="submodules/moab/moab_seq" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>

    <!-- *******************************************
         *>>>>>>>  Continuous Integration   <<<<<<<*
         ******************************************* -->
    <pipeline name="CI">
      <!-- ****************************
           * Dependencies *
           **************************** -->
      <stage name="deps" cleanWorkingDir="true">
        <jobs>
          <job name="prep_exec" runOnAllAgents="true">
            <tasks>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="standalone" job="build_xsmm" srcdir="libxsmm"    dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="zlib"       job="build"      srcdir="zlib"       dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="hdf5"       job="build"      srcdir="hdf5_seq"   dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="netcdf"     job="build"      srcdir="netcdf_seq" dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="moab"       job="build"      srcdir="moab_seq"   dest="edge/libs"/>

              <!-- edge_opt -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>ln -s ../edge_opt/cont .</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <!-- ****************************
           * Sequential sanity checks *
           **************************** -->
      <stage name="sanity_seq" fetchMaterials="false">
        <environmentvariables>
          <!-- zlib, HDF5, NetCDF, and MOAB -->
          <variable name="EDGE_ZLIB">
              <value>libs/zlib</value>
          </variable>
          <variable name="EDGE_HDF5">
              <value>libs/hdf5_seq</value>
          </variable>
          <variable name="EDGE_NETCDF">
              <value>libs/netcdf_seq</value>
          </variable>
          <variable name="EDGE_MOAB">
              <value>libs/moab_seq</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="cppcheck">
            <tasks>
              <exec command="cppcheck" workingdir="edge">
                <arg>--suppress=*:submodules/*</arg>
                <arg>--force</arg>
                <arg>--error-exitcode=1</arg>
                <arg>src</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
          <!-- Shallow Water Equations, line -->
          <job name="swe_line">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/swe/line.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1, cfr=1,8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons equations=swe cfr=1 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons equations=swe cfr=8 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1, cfr=1,8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons equations=swe cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons equations=swe cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Advection equation, line -->
          <job name="advection_line">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/line.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,..5, cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=3 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=4 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=5 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Advection equation, quad4r -->
          <job name="advection_quad4r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/quad4r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,2 cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Advection equation, tria3, unstructured -->
          <job name="advection_tria3_uns">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/tria3_uns.xml</value>
              </variable>
              <variable name="GMSH_CONFIG">
                  <value>cont/advection/sine/tria3.geo</value>
              </variable>
              <variable name="MESH_FILE">
                  <value>tria3.msh</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- generate mesh -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${GMSH_EXEC} -2 ${GMSH_CONFIG} -o ${MESH_FILE}</arg>
                <runif status="passed" />
              </exec>

              <!-- debugger, o=1,2 cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} moab=${EDGE_MOAB} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Advection equation, hex8r -->
          <job name="advection_hex8r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/hex8r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,2, cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Advection equation, tet4, regular -->
          <job name="advection_tet4_reg">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/tet4_reg.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,2, cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Elastics, quad4r -->
          <job name="elastic_quad4r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/elastic/plane_waves/quad4r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,2 cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=2 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=2 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=5 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Elastics, hex8r -->
          <job name="elastic_hex8r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/elastic/plane_waves/hex8r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debugger, o=1,2, cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..4, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..3, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Elastics, tet4, regular -->
          <job name="elastic_tet4_reg">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/elastic/plane_waves/tet4_reg.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debug, o=1,2, cfr=4 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=1 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons  xml=${EDGE_CONFIG} order=2 cfr=4 mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${DEBUGGER} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..4, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=4 cfr=1 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..3, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=1 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=2 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_SEQ} scons xml=${EDGE_CONFIG} order=3 cfr=8 mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

        </jobs>
      </stage>

      <!-- *******************************
           * Shared memory sanity checks *
           ******************************* -->
      <stage name="sanity_omp" fetchMaterials="false">
        <jobs>
          <!-- Advection equation, hex8r -->
          <job name="advection_hex8r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/hex8r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Elastics, hex8r -->
          <job name="elastic_hex8r">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/elastic/plane_waves/hex8r.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=1 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=8 parallel=omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>

      <!-- *********************************************
           * Distributed + shared memory sanity checks *
           ********************************************* -->
      <stage name="sanity_mpi_omp" fetchMaterials="false">
        <jobs>
          <!-- Advection equation, tet4, regular -->
          <job name="advection_tet4_reg">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/advection/sine/tet4_reg.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debug, o=1,2, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- debug, o=1,2, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>

          <!-- Elastics, tet4, regular -->
          <job name="elastic_tet4_reg">
            <environmentvariables>
              <variable name="EDGE_CONFIG">
                  <value>cont/elastic/plane_waves/tet4_reg.xml</value>
              </variable>
            </environmentvariables>
            <tasks>
              <!-- debug, o=1,2, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..5, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=1 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- debug, o=1,2, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_DEBUG} arch=${EDGE_ARCH_DEBUG} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${DEBUGGER_MPI_OMP} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- release, o=1,..,5, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=1 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=2 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=3 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=4 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_MPI_OMP} scons xml=${EDGE_CONFIG} order=5 cfr=8 parallel=mpi+omp mode=${EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${MPI_EXEC} ${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>

    <!-- *******************************************
         *>>>>>>>  Convergence Benchmarks   <<<<<<<*
         ******************************************* -->
    <pipeline name="Conv">
      <!-- ****************
           * Dependencies *
           **************** -->
      <stage name="deps" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="prep_exec" runOnAllAgents="true">
            <tasks>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="standalone" job="build_xsmm" srcdir="libxsmm"    dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="zlib"       job="build"      srcdir="zlib"       dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="hdf5"       job="build"      srcdir="hdf5_seq"   dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="netcdf"     job="build"      srcdir="netcdf_seq" dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="moab"       job="build"      srcdir="moab_seq"   dest="edge/libs"/>

              <!-- edge_opt -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>ln -s ../edge_opt/bench .</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <!-- *******************
           *  Benchmark Runs *
           ******************* -->
      <stage name="build_run" fetchMaterials="false">
        <jobs>
          <job name="adv_line">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q advection                                                                         \
                       -t line                                                                              \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w adv_line                                                                          \
                       -o "1 2 3 4 5 6 7 8 9"                                                               \
                       -l "5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100 125 150 175 200 225 250 500 550 600 650 700 750" \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/adv_line/output/*" dest="xml" />
            </artifacts>
          </job>
          <job name="adv_quad4r">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q advection                                                                         \
                       -t quad4r                                                                            \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w adv_quad4r                                                                        \
                       -o "1 2 3 4 5 6 7"                                                                   \
                       -l "5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100 125 150"                    \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/adv_quad4r/output/*" dest="xml" />
            </artifacts>
          </job>
          <job name="adv_hex8r">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q advection                                                                         \
                       -t hex8r                                                                             \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w adv_hex8r                                                                         \
                       -o "1 2 3 4"                                                                         \
                       -l "5 6 7 8 9 10 15 20 25 30 35"                                                     \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/adv_hex8r/output/*" dest="xml" />
            </artifacts>
          </job>
          <job name="elastic_quad4r">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q elastic                                                                           \
                       -t quad4r                                                                            \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w elastic_quad4r                                                                    \
                       -o "1 2 3 4 5 6 7"                                                                   \
                       -l "5 6 7 8 9 10 15 20 25 30 35 40 45 50 60 70 80 90 100"                            \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/elastic_quad4r/output/*" dest="xml" />
            </artifacts>
          </job>
          <job name="elastic_hex8r">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q elastic                                                                           \
                       -t hex8r                                                                             \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w elastic_hex8r                                                                     \
                       -o "1 2 3 4 5"                                                                       \
                       -l "5 6 7 8 9 10 15 20 25 30"                                                        \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/elastic_hex8r/output/*" dest="xml" />
            </artifacts>
          </job>
          <job name="elastic_tet4_reg">
            <tasks>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP}                                                                         \
                     bench/conv/run.sh                                                                      \
                       -a ${EDGE_ARCH_RELEASE}                                                              \
                       -x $( if [ #{EDGE_XSMM} == 1 ] ; then echo $(pwd)/libs/libxsmm; else echo no ; fi; ) \
                       -m no                                                                                \
                       -q elastic                                                                           \
                       -t tet4                                                                              \
                       -p #{EDGE_PRECISION}                                                                 \
                       -r #{EDGE_CFR}                                                                       \
                       -c $(pwd)                                                                            \
                       -w elastic_tet4_reg                                                                  \
                       -o "1 2 3 4 5"                                                                       \
                       -l "4 6 8 10 12 14 16 18 20 24 28 30"                                                \
                       -d xml
                </arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/elastic_tet4_reg/output/*" dest="xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="visualize" fetchMaterials="false">
        <jobs>
          <job name="advection">
            <tasks>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="adv_line" srcdir="xml" dest="adv_line">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>adv_line/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>adv_line.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="adv_quad4r" srcdir="xml" dest="adv_quad4r">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>adv_quad4r/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>adv_quad4r.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="adv_hex8r" srcdir="xml" dest="adv_hex8r">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>adv_hex8r/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>adv_hex8r.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="adv_*.pdf" />
            </artifacts>
          </job>
          <job name="elastic">
            <tasks>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="elastic_quad4r" srcdir="xml" dest="elastic_quad4r">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>elastic_quad4r/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>elastic_quad4r.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="elastic_hex8r" srcdir="xml" dest="elastic_hex8r">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>elastic_hex8r/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>elastic_hex8r.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="elastic_tet4_reg" srcdir="xml" dest="elastic_tet4_reg">
                <runif status="passed" />
              </fetchartifact>
              <exec command="python">
                <arg>edge/tools/numerics/conv_plot.py</arg>
                <arg>--xdir</arg>
                <arg>elastic_tet4_reg/xml</arg>
                <arg>--xregexp</arg>
                <arg>errors_ORDER_TAG_REFINEMENT_TAG.xml</arg>
                <arg>--pdf</arg>
                <arg>elastic_tet4_reg.pdf</arg>
                <arg>--legend</arg>
                <arg>1</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="elastic_*.pdf" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>

    <!-- *************************************************
         *>>>>>>>   Wave Propagation Benchmarks   <<<<<<<*
         ************************************************* -->
    <pipeline name="WaveProp">
      <!-- ****************************
           * Dependencies *
           **************************** -->
      <stage name="deps" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="prep_exec" runOnAllAgents="true">
            <tasks>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="standalone" job="build_xsmm" srcdir="libxsmm"    dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="zlib"       job="build"      srcdir="zlib"       dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="hdf5"       job="build"      srcdir="hdf5_seq"   dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="netcdf"     job="build"      srcdir="netcdf_seq" dest="edge/libs"/>
              <fetchartifact origin="gocd" pipeline="deps_#{toolchain}" stage="moab"       job="build"      srcdir="moab_seq"   dest="edge/libs"/>

              <!-- adjust rights -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>chmod +x libs/hdf5_seq/bin/* libs/netcdf_seq/bin/* libs/moab_seq/bin/*</arg>
                <runif status="passed" />
              </exec>

              <!-- link source template -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>ln -s tools/processing/kinematic_bench_3d.cdl .</arg>
                <runif status="passed" />
              </exec>

              <!-- edge_opt: pointers -->
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>GIT_LFS_SKIP_SMUDGE=1 git clone TEMPLATE_GIT_EDGE_OPT</arg>
                <runif status="passed" />
              </exec>

              <!-- edge_opt: HSP1a -->
              <exec command="/bin/bash" workingdir="edge_opt">
                <arg>-c</arg>
                <arg>git lfs pull origin master -I bench/seismic/wp/hsp1a/configs bench/seismic/wp/hsp1a/*.xml bench/seismic/wp/hsp1a/*.nc</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>ln -s ../edge_opt/bench .</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="build_run" fetchMaterials="false">
            <environmentvariables>
              <!-- libxsmm is enabled by parameter -->
              <variable name="CPLUS_INCLUDE_PATH">
                  <value>libs/libxsmm/include:${CPLUS_INCLUDE_PATH}</value>
              </variable>
              <variable name="LIBRARY_PATH">
                  <value>libs/libxsmm/lib:${LIBRARY_PATH}</value>
              </variable>
            </environmentvariables>
        <jobs>
          <!-- *******************************
               * WP: HSP1a tet4 regular, OMP *
               ******************************* -->
          <job name="HSP1a_tet4_reg_omp">
            <environmentvariables>
              <variable name="EDGE_EXEC">
                  <value>./build/edge</value>
              </variable>
              <variable name="SRC_CONFIG">
                  <value>bench/seismic/wp/hsp1a/reg_src.xml</value>
              </variable>
              <variable name="EDGE_CONFIG">
                  <value>bench/seismic/wp/hsp1a/configs/reg_96.xml</value>
              </variable>
              <variable name="EDGE_ELEMENT_TYPE">
                  <value>tet4</value>
              </variable>
              <!-- zlib, HDF5, and NetCDF -->
              <variable name="EDGE_ZLIB">
                  <value>libs/zlib</value>
              </variable>
              <variable name="EDGE_HDF5">
                  <value>libs/hdf5_seq</value>
              </variable>
              <variable name="EDGE_NETCDF">
                  <value>libs/netcdf_seq</value>
              </variable>
              <variable name="BENCH_RECVS">
                  <value>hsp1a_reg_recvs_96</value>
              </variable>
            </environmentvariables>

            <tasks>
              <!-- clean receivers dir -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>rm -r recvs; mkdir recvs</arg>
                <runif status="passed" />
              </exec>

              <!-- generate kinematic source description -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>PATH=${EDGE_NETCDF}/bin:$PATH python tools/processing/kinematic_bench.py --xml ${SRC_CONFIG}</arg>
                <runif status="passed" />
              </exec>

              <!-- o=1,..4, cfr=1 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 element_type=${EDGE_ELEMENT_TYPE} cfr=1 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o1c1</arg>
                <runif status="passed" />
              </exec>

              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 element_type=${EDGE_ELEMENT_TYPE} cfr=1 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o2c1</arg>
                <runif status="passed" />
              </exec>

              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 element_type=${EDGE_ELEMENT_TYPE} cfr=1 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o3c1</arg>
                <runif status="passed" />
              </exec>

              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=4 element_type=${EDGE_ELEMENT_TYPE} cfr=1 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o4c1</arg>
                <runif status="passed" />
              </exec>

              <!-- o=1,..3, cfr=8 -->
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=1 element_type=${EDGE_ELEMENT_TYPE} cfr=8 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o1c8</arg>
                <runif status="passed" />
              </exec>

              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=2 element_type=${EDGE_ELEMENT_TYPE} cfr=8 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o2c8</arg>
                <runif status="passed" />
              </exec>

              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>CXX=${CXX_OMP} scons xml=${EDGE_CONFIG} order=3 element_type=${EDGE_ELEMENT_TYPE} cfr=8 parallel=omp mode=#{EDGE_MODE_RELEASE} arch=${EDGE_ARCH_RELEASE} xsmm=#{EDGE_XSMM} zlib=${EDGE_ZLIB} hdf5=${EDGE_HDF5} netcdf=${EDGE_NETCDF} -j ${N_BUILD_PROC}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>${EDGE_EXEC} -x ${EDGE_CONFIG}</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="edge">
                <arg>-c</arg>
                <arg>mv ${BENCH_RECVS} recvs/o3c8</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="edge/recvs" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <!-- ****************************************
           * Stage: Analysis of benchmark results *
           **************************************** -->
      <stage name="analyze" fetchMaterials="false">
        <jobs>
          <!-- HSP1a benchmark -->
          <job name="HSP1a">
            <environmentvariables>
              <variable name="REFERENCE_URL">
                  <value>http://www.sismowine.org/WP1_HSP1a/ref.zip</value>
              </variable>
            </environmentvariables>
            <tasks>
              <fetchartifact origin="gocd" pipeline="" stage="build_run" job="HSP1a_tet4_reg_omp" srcdir="recvs" dest="HSP1a_tet4_reg_omp">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>mkdir ref_hsp1a; wget ${REFERENCE_URL} -O ref_hsp1a/ref.zip; unzip ref_hsp1a/ref.zip -d ref_hsp1a</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>for dir in x y z; do python edge/tools/processing/recvs_plain_to_csv.py --in_file ref_hsp1a/${dir}.dat --out_base ref_hsp1a/${dir}; done</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>mkdir plots_hsp1a; dims=(x y z); for dir in HSP1a_tet4_reg_omp/recvs/*; do for dim in 0 1 2; do for recv in `seq 1 12`; do basedir=$(basename ${dir}); if [ $(echo ${basedir} | grep c8) ] ; then fruns=8; else fruns=1 ; fi; python edge/tools/processing/recvs_compare_csv.py --in_csv ref_hsp1a/${dims[$dim]}_${recv}.csv ${dir}/hsp1a_${recv}.csv --cols 1 $((7*${fruns} + ${dim})) --out_pdf plots_hsp1a/${basedir}_${recv}_${dims[$dim]}.pdf; done; done; done</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact type="build" src="plots_hsp1a/*" dest="plots" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <environments>
    <environment name="Clang">
      <environmentvariables>
        <variable name="CC_SEQ">
            <value>clang</value>
        </variable>
        <variable name="CC_OMP">
            <value>clang</value>
        </variable>
        <variable name="CXX_SEQ">
            <value>clang++</value>
        </variable>
        <variable name="CXX_OMP">
            <value>clang++</value>
        </variable>
        <variable name="CXX_MPI_OMP">
            <value>mpiCC</value>
        </variable>
        <variable name="OMPI_CXX">
            <value>clang++</value>
        </variable>
        <variable name="N_BUILD_PROC">
            <value>2</value>
        </variable>
        <variable name="OMP_NUM_THREADS">
            <value>2</value>
        </variable>
        <variable name="MPI_EXEC">
            <value>mpiexec -n 8</value>
        </variable>
        <variable name="EDGE_ARCH_DEBUG">
            <value>host</value>
        </variable>
        <variable name="DEBUGGER">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="DEBUGGER_MPI_OMP">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="EDGE_ARCH_RELEASE">
            <value>host</value>
        </variable>
      </environmentvariables>
      <agents>
        <physical uuid="TEMPLATE_CLOUD_0_UUID" />
      </agents>
      <pipelines>
        <pipeline name="deps_clang"/>
        <pipeline name="CI_develop_clang" />
      </pipelines>
    </environment>
    <environment name="Gnu">
      <environmentvariables>
        <variable name="CC_SEQ">
            <value>gcc</value>
        </variable>
        <variable name="CC_OMP">
            <value>gcc</value>
        </variable>
        <variable name="CXX_SEQ">
            <value>g++</value>
        </variable>
        <variable name="CXX_OMP">
            <value>g++</value>
        </variable>
        <variable name="CXX_MPI_OMP">
            <value>mpiCC</value>
        </variable>
        <variable name="OMPI_CXX">
            <value>g++</value>
        </variable>
        <variable name="N_BUILD_PROC">
            <value>2</value>
        </variable>
        <variable name="OMP_NUM_THREADS">
            <value>2</value>
        </variable>
        <variable name="MPI_EXEC">
            <value>mpiexec -n 8</value>
        </variable>
        <variable name="EDGE_ARCH_DEBUG">
            <value>host</value>
        </variable>
        <variable name="DEBUGGER">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="DEBUGGER_MPI_OMP">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="EDGE_ARCH_RELEASE">
            <value>host</value>
        </variable>
      </environmentvariables>
      <agents>
        <physical uuid="TEMPLATE_CLOUD_0_UUID" />
      </agents>
      <pipelines>
        <pipeline name="deps_gnu"/>
        <pipeline name="CI_develop_gnu" />
      </pipelines>
    </environment>
    <environment name="Gnu_single">
      <environmentvariables>
        <variable name="CC_SEQ">
            <value>gcc</value>
        </variable>
        <variable name="CC_OMP">
            <value>gcc</value>
        </variable>
        <variable name="CXX_SEQ">
            <value>g++</value>
        </variable>
        <variable name="CXX_OMP">
            <value>g++</value>
        </variable>
        <variable name="CXX_MPI_OMP">
            <value>mpiCC</value>
        </variable>
        <variable name="OMPI_CXX">
            <value>g++</value>
        </variable>
        <variable name="N_BUILD_PROC">
            <value>24</value>
        </variable>
        <variable name="OMP_NUM_THREADS">
            <value>24</value>
        </variable>
        <variable name="MPI_EXEC">
            <value>mpiexec -n 8</value>
        </variable>
        <variable name="EDGE_ARCH_DEBUG">
            <value>host</value>
        </variable>
        <variable name="DEBUGGER">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="DEBUGGER_MPI_OMP">
            <value>valgrind --suppressions=tools/build/vgrind.supp --leak-check=full --error-exitcode=1</value>
        </variable>
        <variable name="EDGE_ARCH_RELEASE">
            <value>host</value>
        </variable>
      </environmentvariables>
      <agents>
        <physical uuid="TEMPLATE_CLOUD_0_UUID" />
      </agents>
      <pipelines>
        <pipeline name="conv_develop_gnu_64_cfr1_xsmm" />
        <pipeline name="conv_develop_gnu_64_cfr8_xsmm" />
        <pipeline name="conv_develop_gnu_32_cfr1_xsmm" />
        <pipeline name="conv_develop_gnu_32_cfr16_xsmm" />
        <pipeline name="wp_develop_gnu_xsmm" />
      </pipelines>
    </environment>

    <environment name="Intel">
      <environmentvariables>
        <variable name="CC_SEQ">
            <value>icc</value>
        </variable>
        <variable name="CC_OMP">
            <value>icc</value>
        </variable>
        <variable name="CXX_SEQ">
            <value>icpc</value>
        </variable>
        <variable name="CXX_OMP">
            <value>icpc</value>
        </variable>
        <variable name="CXX_MPI_OMP">
            <value>mpiicpc</value>
        </variable>
        <variable name="N_BUILD_PROC">
            <value>64</value>
        </variable>
        <variable name="OMP_NUM_THREADS">
            <value>64</value>
        </variable>
        <variable name="MPI_EXEC">
            <value>eval nr=1; rd=inspxe_results_${nr}; while [ -d $rd.$HOSTNAME ]; do nr=`expr $nr + 1`; rd=inspxe_results_${nr};  done; mpiexec -n 8</value>
        </variable>
        <variable name="KMP_AFFINITY">
            <value>norespect,granularity=fine,compact,1,2</value>
        </variable>
        <variable name="EDGE_ARCH_DEBUG">
            <value>knl</value>
        </variable>
        <variable name="DEBUGGER">
            <value>inspxe-cl --collect=mi2 --suppression-file="tools/build/inspxe.supp" --</value>
        </variable>
        <variable name="DEBUGGER_MPI_OMP">
            <value>inspxe-cl --result-dir=$rd --collect=mi2 --suppression-file="tools/build/inspxe.supp" --</value>
        </variable>
        <variable name="EDGE_ARCH_RELEASE">
            <value>knl</value>
        </variable>
      </environmentvariables>
      <agents>
      </agents>
      <pipelines>
        <pipeline name="deps_intel"/>
        <pipeline name="CI_develop_intel" />
      </pipelines>
    </environment>
  </environments>

  <agents>
    <agent hostname="cloud0" ipaddress="TEMPLATE_CLOUD_0_IP" uuid="TEMPLATE_CLOUD_0_UUID">
    </agent>
  </agents>
</cruise>
